{"version":3,"sources":["layout/renderLayout.js","utils/index.js","components/TimePicker.js","components/SpeedPicker.js","components/DistancePicker.js","layout/renderSection.js","components/Main.js","serviceWorker.js","index.js"],"names":["withLayout","element","num","Math","floor","random","bgStyles","background","backgroundSize","minHeight","style","Box","pt","Container","Card","CardContent","ff00","n","String","f00","calcTime","dist","speed","calcSpeed","time","TS","TimePicker","onChange","step","parsedTime","map","join","type","value","speeds","label","SpeedPicker","color","Slider","min","max","onWheel","d","Button","key","onClick","e","distances","withSection","title","Typography","component","variant","Main","useState","setTime","setDist","setSpeed","timeLocked","setTimeLocked","kph","mpk","ms","icon","evt","newTime","split","reduce","acc","el","i","Number","parseTime","target","IconButton","toFixed","DistancePicker","newDist","sign","deltaY","newSpeed","calcDist","Boolean","window","location","hostname","match","ReactDOM","render","theme","createMuiTheme","ThemeProvider","CssBaseline","renderLayout","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d69f259f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Card, CardContent, Container } from \"@material-ui/core\";\n\nconst withLayout = element => {\n  const num = Math.floor(Math.random() * 7);\n  const bgStyles = {\n    background: `url(img/bg${num}.jpg) no-repeat center center fixed`,\n    backgroundSize: \"cover\",\n    minHeight: \"100vh\",\n  };\n\n  return (\n    <main style={bgStyles}>\n      <Box pt={4}>\n        <Container>\n          <Card>\n            <CardContent>{element}</CardContent>\n          </Card>\n        </Container>\n      </Box>\n    </main>\n  );\n};\n\nexport default withLayout;\n","export const SEC = 1;\nexport const MIN = 60 * SEC;\nexport const HOUR = 60 * MIN;\n\nexport const f00 = n => (n < 10 ? `0${n}` : String(n));\nexport const ff00 = n => f00(Math.floor(n));\nexport const calcTime = (dist, speed) => (dist / speed) * HOUR; // seconds\nexport const calcDist = (time, speed) => (speed * time) / HOUR; // meters\nexport const calcPace = (time, dist) => (time / dist) * 1000; // seconds(/km)\nexport const calcSpeed = (time, dist) => (dist * HOUR) / time; // meters(/hour)\n\nconst TS = [HOUR, MIN, SEC];\nexport const parseTime = (time = \"\") =>\n  time.split(\":\").reduce((acc, el, i) => acc + (Number(el) * TS[i] || 0), 0);\n","import React from \"react\";\nimport { ff00 } from \"../utils\";\n\n// eslint-disable-next-line react/prop-types\nconst TimePicker = ({ onChange, time, step }) => {\n  const parsedTime = [time / 3600, Math.floor(time / 60) % 60, time % 60].map(ff00).join(\":\");\n  return <input type=\"time\" value={parsedTime} onChange={onChange} step={step} />;\n};\n\nexport default TimePicker;\n","import React from \"react\";\nimport { Button, Slider } from \"@material-ui/core\";\n\nconst speeds = [\n  { label: \"Walk\", value: 6000 },\n  { label: \"Jog\", value: 8000 },\n  { label: \"Run\", value: 12000 },\n  { label: \"Fast\", value: 15000 },\n  { label: \"Bekele\", value: 24000 },\n];\n\n// eslint-disable-next-line react/prop-types\nconst SpeedPicker = ({ value, color, onChange }) => (\n  <>\n    <Slider\n      min={6000}\n      max={24000}\n      value={value}\n      color={color}\n      onChange={onChange}\n      onWheel={onChange}\n    />\n    <div>\n      {speeds.map(d => (\n        <Button color={color} key={`s${d.value}`} onClick={e => onChange(e, d.value)}>\n          {d.label}\n        </Button>\n      ))}\n    </div>\n  </>\n);\n\nexport default SpeedPicker;\n","import React from \"react\";\nimport { Button, Slider } from \"@material-ui/core\";\n\nconst distances = [\n  { label: \"Mile\", value: 1610 },\n  { label: \"5K\", value: 5000 },\n  { label: \"10K\", value: 10000 },\n  { label: \"Â½ Marathon\", value: 21100 },\n  { label: \"Marathon\", value: 42200 },\n  { label: \"50K\", value: 50000 },\n  { label: \"100K\", value: 100000 },\n];\n\n// eslint-disable-next-line react/prop-types\nconst TimePicker = ({ value, color, onChange }) => (\n  <>\n    <Slider\n      min={100}\n      max={50000}\n      value={value}\n      color={color}\n      onChange={onChange}\n      onWheel={onChange}\n    />\n    <div>\n      {distances.map(d => (\n        <Button color={color} key={`d${d.value}`} onClick={e => onChange(e, d.value)}>\n          {d.label}\n        </Button>\n      ))}\n    </div>\n  </>\n);\n\nexport default TimePicker;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst withSection = (title, element) => (\n  <section>\n    <Typography component=\"h1\" variant=\"h6\">\n      {title}\n    </Typography>\n    {element}\n  </section>\n);\n\nexport default withSection;\n","import React, { useState } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport LockIconOutlined from \"@material-ui/icons/Lock\";\nimport LockOpenIconOutlined from \"@material-ui/icons/LockOpen\";\nimport TimePicker from \"./TimePicker\";\nimport SpeedPicker from \"./SpeedPicker\";\nimport DistancePicker from \"./DistancePicker\";\nimport withSection from \"../layout/renderSection\";\nimport { ff00, parseTime, calcSpeed, calcTime, calcDist } from \"../utils\";\n\nconst Main = () => {\n  const [time, setTime] = useState(90 * 60 + 20);\n  const [dist, setDist] = useState(10000);\n  const [speed, setSpeed] = useState(10000);\n  const [timeLocked, setTimeLocked] = useState(true);\n\n  const stepDist = 100;\n  const stepSpeed = 100;\n\n  const handleTime = (evt, value) => {\n    const newTime = value || parseTime(evt.target.value);\n    setTime(newTime);\n    setSpeed(calcSpeed(newTime, dist));\n  };\n\n  const handleDist = (evt, value) => {\n    const newDist = value || dist + stepDist * -Math.sign(evt.deltaY);\n    setDist(newDist);\n    if (timeLocked) setSpeed(calcSpeed(time, newDist));\n    else setTime(calcTime(newDist, speed));\n  };\n\n  const handleSpeed = (evt, value) => {\n    const newSpeed = value || speed + stepSpeed * -Math.sign(evt.deltaY);\n    setSpeed(newSpeed);\n    if (timeLocked) setDist(calcDist(time, newSpeed));\n    else setTime(calcTime(dist, newSpeed));\n  };\n\n  const toggleTimeLock = () => setTimeLocked(!timeLocked);\n\n  const kph = speed / 1000;\n  const mpk = 60 / kph;\n  const ms = [mpk, (mpk % 1) * 60].map(ff00).join(\":\");\n\n  const icon = timeLocked ? <LockIconOutlined /> : <LockOpenIconOutlined />;\n\n  return (\n    <>\n      {withSection(\n        \"Time\",\n        <>\n          <TimePicker time={time} onChange={handleTime} step={1} />\n          <IconButton onClick={toggleTimeLock}>{icon}</IconButton>\n        </>,\n      )}\n      {withSection(\n        `Distance ${(dist / 1000).toFixed(1)}km`,\n        <DistancePicker color=\"primary\" value={dist} onChange={handleDist} step={stepDist} />,\n      )}\n      {withSection(\n        `Pace ${ms}/km (${kph.toFixed(1)}kph)`,\n        <SpeedPicker color=\"secondary\" value={speed} onChange={handleSpeed} step={stepSpeed} />,\n      )}\n    </>\n  );\n};\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport renderLayout from \"./layout/renderLayout\";\nimport Main from \"./components/Main\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst App = () => {\n  const theme = createMuiTheme();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {renderLayout(<Main />)}\n    </ThemeProvider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}